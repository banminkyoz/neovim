#  _	 __
# | | / /
# | |/ / _	 _	___ ____
# |		 \| | | |/ _ \_  /	Author: Kyoz
# | |\	\ |_| | (_) / /		Github: github.com/banminkyoz
# \_| \_/\__, |\___/___|	Email : banminkyoz@gmail.com
#					__/ |
#				 |___/

#  DEFINING {{{

# Function
snippet f
	function ${1:name} {
		${2:// Content}
	}

# Arrow function
snippet af
  (${1}) => {${2}}

# Import Everything
snippet ime
	import * as ${2:alias} from '${1:path}'

# Import
snippet imp
	import { ${2:module} } from '${1:path}';

# Require
snippet rq
	require('${1:package}')

#  }}}

# ITERABLE {{{

# Iterating over iterable objects by index
snippet for
	for (let i = 0; i < ${1:array}.length; i++) {
		${2:// Content}
	}

# Iterating over iterable objects by index (Reverse)
snippet	forr
	for (let i =	${1:array}.length - 1; i >= 0; i--) {
		${2:// Content}
	}

# Iterating over property values of iterable objects
snippet forin
	for (const item in ${1:object}) {
		${2:// Content}
	}

# Iterating over property names of iterable objects
snippet forof
	for (const item of ${1:object}) {
		${2:// Content}
	}

# }}}

# GET DOM ELEMENT {{{

# Find HTML element by CSS selectors
snippet	getAll
	document.querySelectorAll('${1:selector}');

# Find HTML element by id
snippet	getId
	document.getElementById('${1:id}');

# Find HTML element by class name
snippet	getClass
	document.getElementsByClassName('${1:className}');

# Find HTML element by tag name
snippet	getTag
	document.getElementByTagName('${1:tagName}');

# }}}

# CONDITIONS {{{

# If statement
snippet	iff
	if (${1:condition}) {
		${2:// Content}
	}

# If else statement
snippet	ife
	if (${1:condition}) {
		${2:// If Content}
	} else {
		${3:// Else Content}
	}

# Perform different actions based on different conditions
snippet	switch
	switch(${1:statement}) {
		case valueOne:
		  // Code block
			break;
		case valueTwo:
		  // Code block
			break;
		default:
			${4:codeBlock}
	}

# }}}

# CONSOLE LOG {{{

# Console Log
snippet	log
	console.log(${1:logContent});

# Log Error
snippet	loge
	console.error(${1:logContent});

# Displays tabular data as a table
snippet	logt
	console.table(${1:logContent});

# Log with color
snippet	logc
	console.log('%c ${1:logContent} ', 'color: #ff9400');

# Log with background
snippet	logbg
	console.log('%c ${1:logContent} ', 'background: #222; color: #bada55');

# }}}

# INTERVAL & TIMEOUT {{{

# Executes the given function after the specified delay miliseconds
snippet	timeout
	setTimeout(() => {
		${2:// Content}
	}, ${1:miliseconds})

# Executes the given function after at specified intervals 
snippet	interval
	setInterval(() => {
		${2:// Content}
	}, ${1:miliseconds})

# }}}

